{"ast":null,"code":"import _classCallCheck from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sebringrose/Projects/Dubzoo/app/client/src/components/Social.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport YouTubeAuth from './auth/YouTubeAuth';\nimport YouTubeData from './data/YouTubeData';\nvar Auth;\nvar Data;\n\nvar Social =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Social, _Component);\n\n  function Social(props) {\n    var _this;\n\n    _classCallCheck(this, Social);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Social).call(this, props));\n\n    _this.UpdateUser = function (userID, name, email, accessToken) {\n      var user = {\n        userID: userID,\n        name: name,\n        email: email,\n        accessToken: accessToken\n      };\n\n      _this.setState({\n        user: user\n      }); // PUT Social acount to Strapi user in db\n\n\n      axios.put(\"http://localhost:1337/users/\".concat(_this.props.user.username), {\n        title: 'Updated title'\n      }).then(function (response) {\n        // Handle success.\n        console.log('Well done, your post has been successfully updated: ', response.data);\n      }).catch(function (error) {\n        // Handle error.\n        console.log('An error occurred:', error);\n      });\n    };\n\n    _this.UpdateData = function (arg1, arg2) {\n      var data = {\n        arg1: arg1,\n        arg2: arg2\n      };\n\n      _this.setState({\n        data: data\n      });\n    };\n\n    _this.state = {\n      user: undefined,\n      data: undefined\n    };\n    return _this;\n  } // called from auth child\n\n\n  _createClass(Social, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.target === \"YouTube\") {\n        Auth = React.createElement(YouTubeAuth, {\n          UpdateUser: this.UpdateUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        });\n        Data = React.createElement(YouTubeData, {\n          user: this.state.user,\n          UpdateData: this.UpdateData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n      } else {\n        Auth = \"Please supply a configured target\";\n      }\n\n      return React.createElement(\"div\", {\n        className: \"Social\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.props.target), Data, Auth);\n    }\n  }]);\n\n  return Social;\n}(Component);\n\nexport default Social;","map":{"version":3,"sources":["/Users/sebringrose/Projects/Dubzoo/app/client/src/components/Social.js"],"names":["React","Component","axios","YouTubeAuth","YouTubeData","Auth","Data","Social","props","UpdateUser","userID","name","email","accessToken","user","setState","put","username","title","then","response","console","log","data","catch","error","UpdateData","arg1","arg2","state","undefined","target"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,IAAIC,IAAJ;AACA,IAAIC,IAAJ;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;;AADiB,UAUnBC,UAVmB,GAUN,UAACC,MAAD,EAASC,IAAT,EAAeC,KAAf,EAAsBC,WAAtB,EAAsC;AAEjD,UAAIC,IAAI,GAAG;AACTJ,QAAAA,MAAM,EAAEA,MADC;AAETC,QAAAA,IAAI,EAAEA,IAFG;AAGTC,QAAAA,KAAK,EAAEA,KAHE;AAITC,QAAAA,WAAW,EAAEA;AAJJ,OAAX;;AAOA,YAAKE,QAAL,CAAc;AAAED,QAAAA,IAAI,EAAEA;AAAR,OAAd,EATiD,CAWjD;;;AACAZ,MAAAA,KAAK,CACFc,GADH,uCACsC,MAAKR,KAAL,CAAWM,IAAX,CAAgBG,QADtD,GACkE;AAC9DC,QAAAA,KAAK,EAAE;AADuD,OADlE,EAIGC,IAJH,CAIQ,UAAAC,QAAQ,EAAI;AAChB;AACAC,QAAAA,OAAO,CAACC,GAAR,CACE,sDADF,EAEEF,QAAQ,CAACG,IAFX;AAID,OAVH,EAWGC,KAXH,CAWS,UAAAC,KAAK,EAAI;AACd;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCG,KAAlC;AACD,OAdH;AAgBD,KAtCkB;;AAAA,UAyCnBC,UAzCmB,GAyCN,UAACC,IAAD,EAAOC,IAAP,EAAgB;AAE3B,UAAIL,IAAI,GAAG;AACTI,QAAAA,IAAI,EAAEA,IADG;AAETC,QAAAA,IAAI,EAAEA;AAFG,OAAX;;AAKA,YAAKb,QAAL,CAAc;AAAEQ,QAAAA,IAAI,EAAEA;AAAR,OAAd;AACD,KAjDkB;;AAGjB,UAAKM,KAAL,GAAa;AACXf,MAAAA,IAAI,EAAEgB,SADK;AAEXP,MAAAA,IAAI,EAAEO;AAFK,KAAb;AAHiB;AAOlB,G,CAED;;;;;6BA0CS;AAEP,UAAI,KAAKtB,KAAL,CAAWuB,MAAX,KAAsB,SAA1B,EAAqC;AACnC1B,QAAAA,IAAI,GAAG,oBAAC,WAAD;AAAa,UAAA,UAAU,EAAE,KAAKI,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACAH,QAAAA,IAAI,GAAG,oBAAC,WAAD;AAAa,UAAA,IAAI,EAAE,KAAKuB,KAAL,CAAWf,IAA9B;AAAoC,UAAA,UAAU,EAAE,KAAKY,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAHD,MAGO;AACLrB,QAAAA,IAAI,GAAG,mCAAP;AACD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKG,KAAL,CAAWuB,MAAhB,CADF,EAEGzB,IAFH,EAGGD,IAHH,CADF;AAQD;;;;EArEkBJ,S;;AAwErB,eAAeM,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport YouTubeAuth from './auth/YouTubeAuth';\nimport YouTubeData from './data/YouTubeData';\n\nvar Auth;\nvar Data;\n\nclass Social extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: undefined,\n      data: undefined\n    }\n  }\n\n  // called from auth child\n  UpdateUser = (userID, name, email, accessToken) => {\n\n    let user = {\n      userID: userID,\n      name: name,\n      email: email,\n      accessToken: accessToken\n    }\n\n    this.setState({ user: user });\n\n    // PUT Social acount to Strapi user in db\n    axios\n      .put(`http://localhost:1337/users/${this.props.user.username}`, {\n        title: 'Updated title'\n      })\n      .then(response => {\n        // Handle success.\n        console.log(\n          'Well done, your post has been successfully updated: ',\n          response.data\n        );\n      })\n      .catch(error => {\n        // Handle error.\n        console.log('An error occurred:', error);\n      });\n\n  }\n\n  // called from data child\n  UpdateData = (arg1, arg2) => {\n\n    let data = {\n      arg1: arg1,\n      arg2: arg2\n    }\n\n    this.setState({ data: data });\n  }\n\n  render() {\n\n    if (this.props.target === \"YouTube\") {\n      Auth = <YouTubeAuth UpdateUser={this.UpdateUser}/>;\n      Data = <YouTubeData user={this.state.user} UpdateData={this.UpdateData}/>;\n    } else {\n      Auth = \"Please supply a configured target\";\n    }\n\n    return(\n      <div className=\"Social\">\n        <h2>{this.props.target}</h2>\n        {Data}\n        {Auth}\n      </div>\n    );\n\n  }\n}\n\nexport default Social;\n"]},"metadata":{},"sourceType":"module"}