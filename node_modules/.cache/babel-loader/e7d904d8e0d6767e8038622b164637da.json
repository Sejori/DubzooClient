{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sebringrose/Projects/Dubzoo/app/client/src/components/data/YouTubeData.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nvar keys = require('../../config/keys');\n\nvar Content;\n\nvar YouTubeData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(YouTubeData, _Component);\n\n  function YouTubeData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, YouTubeData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(YouTubeData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.FetchData =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var today, dd, mm, yyyy, monthAgo;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // getting current date\n              today = new Date();\n              dd = today.getDate();\n              mm = today.getMonth() + 1;\n              yyyy = today.getFullYear();\n              today = mm + '-' + dd + '-' + yyyy;\n              mm = mm - 1;\n              monthAgo = mm + '-' + dd + '-' + yyyy; // GET YT Analytics API\n\n              axios.get(keys.YOUTUBE_ANALYTICS_URI, {\n                access_token: _this.props.user.accessToken,\n                endDate: today,\n                ids: _this.props.channelName,\n                scope: keys.YOUTUBE_SCOPES,\n                startDate: monthAgo,\n                metrics: 'estimatedMinutesWatched,views,likes,subscribersGained',\n                dimensions: 'hour',\n                sort: 'day'\n              }).then(function (response) {\n                // Handle success.\n                console.log('Well done!');\n                console.log(response);\n              }).catch(function (error) {\n                // Handle error.\n                console.log('An error occurred:', error);\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _this;\n  }\n\n  _createClass(YouTubeData, [{\n    key: \"render\",\n    value: function render() {\n      Content = React.createElement(\"button\", {\n        onClick: this.FetchData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Fetch Data\");\n      return React.createElement(\"div\", {\n        className: \"Data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, Content);\n    }\n  }]);\n\n  return YouTubeData;\n}(Component);\n\nexport default YouTubeData;","map":{"version":3,"sources":["/Users/sebringrose/Projects/Dubzoo/app/client/src/components/data/YouTubeData.js"],"names":["React","Component","axios","keys","require","Content","YouTubeData","FetchData","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","monthAgo","get","YOUTUBE_ANALYTICS_URI","access_token","props","user","accessToken","endDate","ids","channelName","scope","YOUTUBE_SCOPES","startDate","metrics","dimensions","sort","then","response","console","log","catch","error"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAAC,mBAAD,CAApB;;AACA,IAAIC,OAAJ;;IAEMC,W;;;;;;;;;;;;;;;;;UAEJC,S;;;;6BAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAEV;AACIC,cAAAA,KAHM,GAGE,IAAIC,IAAJ,EAHF;AAINC,cAAAA,EAJM,GAIDF,KAAK,CAACG,OAAN,EAJC;AAKNC,cAAAA,EALM,GAKDJ,KAAK,CAACK,QAAN,KAAiB,CALhB;AAMNC,cAAAA,IANM,GAMCN,KAAK,CAACO,WAAN,EAND;AAOVP,cAAAA,KAAK,GAAGI,EAAE,GAAC,GAAH,GAAOF,EAAP,GAAU,GAAV,GAAcI,IAAtB;AAEAF,cAAAA,EAAE,GAAGA,EAAE,GAAG,CAAV;AACII,cAAAA,QAVM,GAUKJ,EAAE,GAAC,GAAH,GAAOF,EAAP,GAAU,GAAV,GAAcI,IAVnB,EAYV;;AACAZ,cAAAA,KAAK,CACFe,GADH,CACOd,IAAI,CAACe,qBADZ,EACmC;AAC/BC,gBAAAA,YAAY,EAAE,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,WADC;AAE/BC,gBAAAA,OAAO,EAAEf,KAFsB;AAG/BgB,gBAAAA,GAAG,EAAE,MAAKJ,KAAL,CAAWK,WAHe;AAI/BC,gBAAAA,KAAK,EAAEvB,IAAI,CAACwB,cAJmB;AAK/BC,gBAAAA,SAAS,EAAEZ,QALoB;AAM/Ba,gBAAAA,OAAO,EAAE,uDANsB;AAO/BC,gBAAAA,UAAU,EAAE,MAPmB;AAQ/BC,gBAAAA,IAAI,EAAE;AARyB,eADnC,EAWGC,IAXH,CAWQ,UAAAC,QAAQ,EAAI;AAChB;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,gBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,eAfH,EAgBGG,KAhBH,CAgBS,UAAAC,KAAK,EAAI;AACd;AACAH,gBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCE,KAAlC;AACD,eAnBH;;AAbU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;6BAoCH;AAEPhC,MAAAA,OAAO,GAAG;AAAQ,QAAA,OAAO,EAAE,KAAKE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAV;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,OADH,CADF;AAKD;;;;EA/CuBJ,S;;AAkD1B,eAAeK,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst keys = require('../../config/keys');\nvar Content;\n\nclass YouTubeData extends Component {\n\n  FetchData = async() => {\n\n    // getting current date\n    var today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth()+1;\n    let yyyy = today.getFullYear();\n    today = mm+'-'+dd+'-'+yyyy;\n\n    mm = mm - 1;\n    var monthAgo = mm+'-'+dd+'-'+yyyy;\n\n    // GET YT Analytics API\n    axios\n      .get(keys.YOUTUBE_ANALYTICS_URI, {\n        access_token: this.props.user.accessToken,\n        endDate: today,\n        ids: this.props.channelName,\n        scope: keys.YOUTUBE_SCOPES,\n        startDate: monthAgo,\n        metrics: 'estimatedMinutesWatched,views,likes,subscribersGained',\n        dimensions: 'hour',\n        sort: 'day'\n      })\n      .then(response => {\n        // Handle success.\n        console.log('Well done!');\n        console.log(response);\n      })\n      .catch(error => {\n        // Handle error.\n        console.log('An error occurred:', error);\n      });\n\n  }\n\n  render() {\n\n    Content = <button onClick={this.FetchData}>Fetch Data</button>\n\n    return(\n      <div className=\"Data\">\n        {Content}\n      </div>\n    );\n  }\n}\n\nexport default YouTubeData;\n"]},"metadata":{},"sourceType":"module"}