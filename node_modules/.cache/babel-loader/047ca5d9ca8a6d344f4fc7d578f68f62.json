{"ast":null,"code":"import _classCallCheck from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sebringrose/Projects/Dubzoo/app/client/src/components/auth/YouTubeAuth.js\";\nimport React, { Component } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport axios from 'axios';\n\nvar keys = require('../../config/keys');\n\nvar YouTubeAuth =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(YouTubeAuth, _Component);\n\n  function YouTubeAuth(props) {\n    var _this;\n\n    _classCallCheck(this, YouTubeAuth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(YouTubeAuth).call(this, props)); // only userID needed in this component to check whether logged in or not.\n\n    _this.logout = function () {\n      _this.setState({\n        socialUserID: ''\n      });\n    };\n\n    _this.onFailure = function (error) {\n      console.log(error);\n    };\n\n    _this.googleResponse = function (response) {\n      _this.setState({\n        socailUserID: response.googleId\n      }); // Store retrieved credentials in database\n\n\n      axios.get('http://localhost:1337/users/me', {\n        headers: {\n          Authorization: 'Bearer ' + _this.props.user.jwt\n        }\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios.get('http://localhost:1337/youtubeaccounts/me', {\n        headers: {\n          Authorization: 'Bearer ' + _this.props.user.jwt\n        }\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      }); // PUT Social acount to Strapi user in db /${this.props.user.jwt}\n      // axios\n      //   .put(`http://localhost:1337/users/me`, {\n      //     headers: {\n      //       Authorization: `Bearer ${this.props.user.jwt}`\n      //     },\n      //     YouTubeUserID: response.googleId,\n      //     YouTubeName: response.profileObj.name,\n      //     YouTubeAccessToken: response.tokenObj.access_token\n      //   })\n      //   .then(response => {\n      //     // Handle success.\n      //     console.log(\n      //       'Well done, your post has been successfully updated: ',\n      //       response.data\n      //     );\n      //   })\n      //   .catch(error => {\n      //     // Handle error.\n      //     console.log('An error occurred:', error);\n      //   });\n    };\n\n    _this.state = {\n      socialUserID: ''\n    };\n    return _this;\n  }\n\n  _createClass(YouTubeAuth, [{\n    key: \"render\",\n    value: function render() {\n      switch (this.state.socialUserID) {\n        case '':\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, React.createElement(GoogleLogin, {\n            clientId: keys.GOOGLE_CLIENT_ID,\n            scope: keys.YOUTUBE_AUTH_SCOPE,\n            buttonText: \"Login\",\n            responseType: \"id_token\",\n            prompt: \"consent\",\n            accessType: \"offline\",\n            onSuccess: this.googleResponse,\n            onFailure: this.onFailure,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }));\n\n        default:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            onClick: this.logout,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, \"Logout\"));\n      }\n    }\n  }]);\n\n  return YouTubeAuth;\n}(Component);\n\nexport default YouTubeAuth;","map":{"version":3,"sources":["/Users/sebringrose/Projects/Dubzoo/app/client/src/components/auth/YouTubeAuth.js"],"names":["React","Component","GoogleLogin","axios","keys","require","YouTubeAuth","props","logout","setState","socialUserID","onFailure","error","console","log","googleResponse","response","socailUserID","googleId","get","headers","Authorization","user","jwt","then","catch","state","GOOGLE_CLIENT_ID","YOUTUBE_AUTH_SCOPE"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAAC,mBAAD,CAApB;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN,GADe,CAGf;;AAHe,UASnBC,MATmB,GASV,YAAM;AACX,YAAKC,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACH,KAXkB;;AAAA,UAanBC,SAbmB,GAaP,UAACC,KAAD,EAAW;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAfkB;;AAAA,UAiBnBG,cAjBmB,GAiBF,UAACC,QAAD,EAAc;AAE7B,YAAKP,QAAL,CAAc;AAAEQ,QAAAA,YAAY,EAAED,QAAQ,CAACE;AAAzB,OAAd,EAF6B,CAI7B;;;AAEAf,MAAAA,KAAK,CACFgB,GADH,CACO,gCADP,EACyC;AACrCC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,YAAY,MAAKd,KAAL,CAAWe,IAAX,CAAgBC;AADpC;AAD4B,OADzC,EAMGC,IANH,CAMQ,UAAAR,QAAQ,EAAI;AAChBH,QAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACD,OARH,EASGS,KATH,CASS,UAAAb,KAAK,EAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAXH;AAaAT,MAAAA,KAAK,CACFgB,GADH,CACO,0CADP,EACmD;AAC/CC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,YAAY,MAAKd,KAAL,CAAWe,IAAX,CAAgBC;AADpC;AADsC,OADnD,EAMGC,IANH,CAMQ,UAAAR,QAAQ,EAAI;AAChBH,QAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACD,OARH,EASGS,KATH,CASS,UAAAb,KAAK,EAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAXH,EAnB6B,CAgC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,KAvEkB;;AAIf,UAAKc,KAAL,GAAa;AACXhB,MAAAA,YAAY,EAAE;AADH,KAAb;AAJe;AAOlB;;;;6BAkEQ;AACP,cAAQ,KAAKgB,KAAL,CAAWhB,YAAnB;AACE,aAAK,EAAL;AACE,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,WAAD;AACI,YAAA,QAAQ,EAAEN,IAAI,CAACuB,gBADnB;AAEI,YAAA,KAAK,EAAEvB,IAAI,CAACwB,kBAFhB;AAGI,YAAA,UAAU,EAAC,OAHf;AAII,YAAA,YAAY,EAAC,UAJjB;AAKI,YAAA,MAAM,EAAC,SALX;AAMI,YAAA,UAAU,EAAC,SANf;AAOI,YAAA,SAAS,EAAE,KAAKb,cAPpB;AAQI,YAAA,SAAS,EAAE,KAAKJ,SARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADF;;AAeF;AACE,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAQ,YAAA,OAAO,EAAE,KAAKH,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,CADF;AAlBJ;AAwBD;;;;EAnGuBP,S;;AAsG1B,eAAeK,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport axios from 'axios';\n\nconst keys = require('../../config/keys');\n\nclass YouTubeAuth extends Component {\n  constructor(props) {\n      super(props);\n\n      // only userID needed in this component to check whether logged in or not.\n      this.state = {\n        socialUserID: '',\n      };\n  }\n\n  logout = () => {\n      this.setState({ socialUserID: '' })\n  };\n\n  onFailure = (error) => {\n    console.log(error);\n  };\n\n  googleResponse = (response) => {\n\n    this.setState({ socailUserID: response.googleId })\n\n    // Store retrieved credentials in database\n\n    axios\n      .get('http://localhost:1337/users/me', {\n        headers: {\n          Authorization: 'Bearer ' + this.props.user.jwt\n        }\n      })\n      .then(response => {\n        console.log(response)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    axios\n      .get('http://localhost:1337/youtubeaccounts/me', {\n        headers: {\n          Authorization: 'Bearer ' + this.props.user.jwt\n        }\n      })\n      .then(response => {\n        console.log(response)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    // PUT Social acount to Strapi user in db /${this.props.user.jwt}\n    // axios\n    //   .put(`http://localhost:1337/users/me`, {\n    //     headers: {\n    //       Authorization: `Bearer ${this.props.user.jwt}`\n    //     },\n    //     YouTubeUserID: response.googleId,\n    //     YouTubeName: response.profileObj.name,\n    //     YouTubeAccessToken: response.tokenObj.access_token\n    //   })\n    //   .then(response => {\n    //     // Handle success.\n    //     console.log(\n    //       'Well done, your post has been successfully updated: ',\n    //       response.data\n    //     );\n    //   })\n    //   .catch(error => {\n    //     // Handle error.\n    //     console.log('An error occurred:', error);\n    //   });\n\n  }\n\n  render() {\n    switch (this.state.socialUserID) {\n      case '':\n        return(\n          <div>\n              <GoogleLogin\n                  clientId={keys.GOOGLE_CLIENT_ID}\n                  scope={keys.YOUTUBE_AUTH_SCOPE}\n                  buttonText=\"Login\"\n                  responseType=\"id_token\"\n                  prompt=\"consent\"\n                  accessType=\"offline\"\n                  onSuccess={this.googleResponse}\n                  onFailure={this.onFailure}\n              />\n          </div>\n        )\n\n      default:\n        return(\n          <div>\n          <button onClick={this.logout}>Logout</button>\n          </div>\n        )\n    }\n  }\n}\n\nexport default YouTubeAuth;\n"]},"metadata":{},"sourceType":"module"}