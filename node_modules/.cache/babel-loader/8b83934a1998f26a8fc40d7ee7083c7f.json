{"ast":null,"code":"import _classCallCheck from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sebringrose/Projects/Dubzoo/app/client/src/components/auth/YouTubeAuth.js\";\nimport React, { Component } from 'react';\nimport { GoogleLogin } from 'react-google-login';\n\nvar keys = require('../../config/keys');\n\nvar YouTubeAuth =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(YouTubeAuth, _Component);\n\n  function YouTubeAuth() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, YouTubeAuth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(YouTubeAuth)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.componentDidMount = function () {\n      // call check credentials fcn\n      console.log(\"this worked\");\n    };\n\n    _this.onFailure = function (error) {\n      console.log(error);\n    };\n\n    _this.googleResponse = function (response) {\n      var channelName = response.profileObj.name;\n      var profileObj = response.profileObj;\n      var tokenObj = response.tokenObj;\n      var user = _this.props.user.userID; // Store retrieved credentials in database\n\n      fetch(keys.STRAPI_URI + '/youtubeaccounts', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + _this.props.user.jwt\n        },\n        body: JSON.stringify({\n          \"channelName\": channelName,\n          \"profileObj\": profileObj,\n          \"tokenObj\": tokenObj,\n          \"user\": user\n        })\n      }); // .then(response => response.json())\n      // .then(response => console.log(response))\n      // Update YouTube Auth status\n    };\n\n    return _this;\n  }\n\n  _createClass(YouTubeAuth, [{\n    key: \"render\",\n    value: function render() {\n      switch (this.props.youTubeAuthorised) {\n        case false:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(GoogleLogin, {\n            clientId: keys.GOOGLE_CLIENT_ID,\n            scope: keys.YOUTUBE_AUTH_SCOPE,\n            buttonText: \"Login\",\n            responseType: \"id_token\",\n            prompt: \"consent\",\n            accessType: \"offline\",\n            onSuccess: this.googleResponse,\n            onFailure: this.onFailure,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }));\n\n        default:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            onClick: this.logout,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, \"Logout\"));\n      }\n    }\n  }]);\n\n  return YouTubeAuth;\n}(Component);\n\nexport default YouTubeAuth;","map":{"version":3,"sources":["/Users/sebringrose/Projects/Dubzoo/app/client/src/components/auth/YouTubeAuth.js"],"names":["React","Component","GoogleLogin","keys","require","YouTubeAuth","componentDidMount","console","log","onFailure","error","googleResponse","response","channelName","profileObj","name","tokenObj","user","props","userID","fetch","STRAPI_URI","method","headers","jwt","body","JSON","stringify","youTubeAuthorised","GOOGLE_CLIENT_ID","YOUTUBE_AUTH_SCOPE","logout"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAAC,mBAAD,CAApB;;IAEMC,W;;;;;;;;;;;;;;;;;;UAEJC,iB,GAAoB,YAAM;AAExB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAED,K;;UAEDC,S,GAAY,UAACC,KAAD,EAAW;AACrBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,K;;UAEDC,c,GAAiB,UAACC,QAAD,EAAc;AAE7B,UAAIC,WAAW,GAAGD,QAAQ,CAACE,UAAT,CAAoBC,IAAtC;AACA,UAAID,UAAU,GAAGF,QAAQ,CAACE,UAA1B;AACA,UAAIE,QAAQ,GAAGJ,QAAQ,CAACI,QAAxB;AACA,UAAIC,IAAI,GAAG,MAAKC,KAAL,CAAWD,IAAX,CAAgBE,MAA3B,CAL6B,CAO7B;;AACAC,MAAAA,KAAK,CAACjB,IAAI,CAACkB,UAAL,GAAkB,kBAAnB,EAAuC;AAC1CC,QAAAA,MAAM,EAAE,MADkC;AAE1CC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,2BAAiB,YAAY,MAAKL,KAAL,CAAWD,IAAX,CAAgBO;AAFtC,SAFiC;AAM1CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB,yBAAed,WADI;AAEnB,wBAAcC,UAFK;AAGnB,sBAAYE,QAHO;AAInB,kBAAQC;AAJW,SAAf;AANoC,OAAvC,CAAL,CAR6B,CAqB7B;AACA;AAMA;AACD,K;;;;;;;6BAEQ;AACP,cAAQ,KAAKC,KAAL,CAAWU,iBAAnB;AACE,aAAK,KAAL;AACE,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,WAAD;AACI,YAAA,QAAQ,EAAEzB,IAAI,CAAC0B,gBADnB;AAEI,YAAA,KAAK,EAAE1B,IAAI,CAAC2B,kBAFhB;AAGI,YAAA,UAAU,EAAC,OAHf;AAII,YAAA,YAAY,EAAC,UAJjB;AAKI,YAAA,MAAM,EAAC,SALX;AAMI,YAAA,UAAU,EAAC,SANf;AAOI,YAAA,SAAS,EAAE,KAAKnB,cAPpB;AAQI,YAAA,SAAS,EAAE,KAAKF,SARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADF;;AAeF;AACE,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAQ,YAAA,OAAO,EAAE,KAAKsB,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,CADF;AAlBJ;AAwBD;;;;EArEuB9B,S;;AAwE1B,eAAeI,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport { GoogleLogin } from 'react-google-login';\n\nconst keys = require('../../config/keys');\n\nclass YouTubeAuth extends Component {\n\n  componentDidMount = () => {\n\n    // call check credentials fcn\n    console.log(\"this worked\")\n\n  }\n\n  onFailure = (error) => {\n    console.log(error);\n  };\n\n  googleResponse = (response) => {\n\n    let channelName = response.profileObj.name;\n    let profileObj = response.profileObj;\n    let tokenObj = response.tokenObj;\n    let user = this.props.user.userID;\n\n    // Store retrieved credentials in database\n    fetch(keys.STRAPI_URI + '/youtubeaccounts', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + this.props.user.jwt\n      },\n      body: JSON.stringify({\n        \"channelName\": channelName,\n        \"profileObj\": profileObj,\n        \"tokenObj\": tokenObj,\n        \"user\": user\n      })\n    })\n    // .then(response => response.json())\n    // .then(response => console.log(response))\n\n\n\n\n\n    // Update YouTube Auth status\n  }\n\n  render() {\n    switch (this.props.youTubeAuthorised) {\n      case false:\n        return(\n          <div>\n              <GoogleLogin\n                  clientId={keys.GOOGLE_CLIENT_ID}\n                  scope={keys.YOUTUBE_AUTH_SCOPE}\n                  buttonText=\"Login\"\n                  responseType=\"id_token\"\n                  prompt=\"consent\"\n                  accessType=\"offline\"\n                  onSuccess={this.googleResponse}\n                  onFailure={this.onFailure}\n              />\n          </div>\n        )\n\n      default:\n        return(\n          <div>\n          <button onClick={this.logout}>Logout</button>\n          </div>\n        )\n    }\n  }\n}\n\nexport default YouTubeAuth;\n"]},"metadata":{},"sourceType":"module"}