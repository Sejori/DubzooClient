{"ast":null,"code":"import _classCallCheck from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sebringrose/Projects/Dubzoo/app/client/src/components/auth/YouTubeAuth.js\";\nimport React, { Component } from 'react';\n\nvar keys = require('../../config/keys');\n\nvar GoogleAuth; // Google Auth object.\n\nvar YouTubeAuth =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(YouTubeAuth, _Component);\n\n  function YouTubeAuth() {\n    var _this;\n\n    _classCallCheck(this, YouTubeAuth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(YouTubeAuth).call(this));\n\n    _this.initClient = function () {\n      gapi.client.init({\n        'apiKey': keys.GOOGLE_API_KEY,\n        'clientId': key.GOOGLE_CLIENT_ID,\n        'scope': key.GOOGLE_SCOPES,\n        'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/youtubeAnalytics/v1/rest']\n      }).then(function () {\n        GoogleAuth = gapi.auth2.getAuthInstance(); // Listen for sign-in state changes.\n\n        GoogleAuth.isSignedIn.listen(updateSigninStatus);\n      });\n    };\n\n    _this.state = {\n      credentials: null\n    };\n    return _this;\n  }\n\n  _createClass(YouTubeAuth, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.authenticate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"LOGIN\"));\n    }\n  }]);\n\n  return YouTubeAuth;\n}(Component);\n\nexport default YouTubeAuth;","map":{"version":3,"sources":["/Users/sebringrose/Projects/Dubzoo/app/client/src/components/auth/YouTubeAuth.js"],"names":["React","Component","keys","require","GoogleAuth","YouTubeAuth","initClient","gapi","client","init","GOOGLE_API_KEY","key","GOOGLE_CLIENT_ID","GOOGLE_SCOPES","then","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","state","credentials","authenticate"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAAC,mBAAD,CAApB;;AACA,IAAIC,UAAJ,C,CAAgB;;IAEVC,W;;;;;AACJ,yBAAc;AAAA;;AAAA;;AACZ;;AADY,UAQdC,UARc,GAQD,YAAM;AACjBC,MAAAA,IAAI,CAACC,MAAL,CAAYC,IAAZ,CAAiB;AACb,kBAAUP,IAAI,CAACQ,cADF;AAEb,oBAAYC,GAAG,CAACC,gBAFH;AAGb,iBAASD,GAAG,CAACE,aAHA;AAIb,yBAAiB,CAAC,uEAAD;AAJJ,OAAjB,EAKGC,IALH,CAKQ,YAAY;AAChBV,QAAAA,UAAU,GAAGG,IAAI,CAACQ,KAAL,CAAWC,eAAX,EAAb,CADgB,CAGhB;;AACAZ,QAAAA,UAAU,CAACa,UAAX,CAAsBC,MAAtB,CAA6BC,kBAA7B;AACH,OAVD;AAWD,KApBa;;AAGZ,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAHY;AAMb;;;;6BAgBQ;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AAKD;;;;EA7BqBrB,S;;AAgC1B,eAAeI,WAAf","sourcesContent":["import React, { Component } from 'react';\n\nconst keys = require('../../config/keys')\nvar GoogleAuth; // Google Auth object.\n\nclass YouTubeAuth extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      credentials: null,\n    }\n  }\n\n  initClient = () => {\n    gapi.client.init({\n        'apiKey': keys.GOOGLE_API_KEY,\n        'clientId': key.GOOGLE_CLIENT_ID,\n        'scope': key.GOOGLE_SCOPES,\n        'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/youtubeAnalytics/v1/rest']\n    }).then(function () {\n        GoogleAuth = gapi.auth2.getAuthInstance();\n\n        // Listen for sign-in state changes.\n        GoogleAuth.isSignedIn.listen(updateSigninStatus);\n    });\n  }\n\n  render() {\n      return (\n        <div>\n          <button onClick={this.authenticate}>LOGIN</button>\n        </div>\n      );\n    }\n  }\n\nexport default YouTubeAuth;\n"]},"metadata":{},"sourceType":"module"}