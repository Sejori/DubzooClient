{"ast":null,"code":"import _defineProperty from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sebringrose/Projects/Dubzoo/app/client/src/components/data/YouTubeData.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nvar keys = require('../../config/keys');\n\nvar Content;\n\nvar YouTubeData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(YouTubeData, _Component);\n\n  function YouTubeData(props) {\n    var _this;\n\n    _classCallCheck(this, YouTubeData);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(YouTubeData).call(this, props));\n    _this.FetchData =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var today, dd, mm, yyyy, yearAgo;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              alert(\"you got here\"); // getting current date\n\n              today = new Date();\n              dd = today.getDate();\n              mm = today.getMonth() + 1;\n              yyyy = today.getFullYear();\n              today = mm + '-' + dd + '-' + yyyy;\n              yyyy = yyyy - 1;\n              yearAgo = mm + '-' + dd + '-' + yyyy; // GET YT Analytics API\n\n              axios.get(keys.YOUTUBE_ANALYTICS_URI, {\n                access_token: _this.props.user.accessToken,\n                endDate: today,\n                ids: _this.state.channelName,\n                scope: keys.YOUTUBE_SCOPE,\n                startDate: yearAgo,\n                metrics: 'estimatedMinutesWatched,views,likes,subscribersGained',\n                dimensions: 'hour',\n                sort: 'day'\n              }).then(function (response) {\n                // Handle success.\n                console.log('Well done!');\n                console.log(response);\n              }).catch(function (error) {\n                // Handle error.\n                console.log('An error occurred:', error);\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.handleChange = function (_ref2) {\n      var target = _ref2.target;\n\n      _this.setState(_defineProperty({}, target.name, target.value));\n    };\n\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(YouTubeData, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.user === undefined) {\n        Content = \"\";\n      } else {\n        Content = React.createElement(\"div\", {\n          className: \"Data\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          name: \"channelName\",\n          type: \"text\",\n          placeholder: \"YouTube Channel Name\",\n          value: this.state.channelName,\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: this.Login,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Login\"), React.createElement(\"button\", {\n          onClick: this.FetchData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Fetch Data\"));\n      }\n\n      return Content;\n    }\n  }]);\n\n  return YouTubeData;\n}(Component);\n\nexport default YouTubeData;","map":{"version":3,"sources":["/Users/sebringrose/Projects/Dubzoo/app/client/src/components/data/YouTubeData.js"],"names":["React","Component","axios","keys","require","Content","YouTubeData","props","FetchData","alert","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","yearAgo","get","YOUTUBE_ANALYTICS_URI","access_token","user","accessToken","endDate","ids","state","channelName","scope","YOUTUBE_SCOPE","startDate","metrics","dimensions","sort","then","response","console","log","catch","error","handleChange","target","setState","name","value","data","undefined","Login"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst keys = require('../../config/keys');\nvar Content;\n\nclass YouTubeData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { data: [] }\n  }\n\n  FetchData = async() => {\n    alert(\"you got here\");\n\n    // getting current date\n    var today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth()+1;\n    let yyyy = today.getFullYear();\n    today = mm+'-'+dd+'-'+yyyy;\n\n    yyyy = yyyy - 1;\n    var yearAgo = mm+'-'+dd+'-'+yyyy;\n\n    // GET YT Analytics API\n    axios\n      .get(keys.YOUTUBE_ANALYTICS_URI, {\n        access_token: this.props.user.accessToken,\n        endDate: today,\n        ids: this.state.channelName,\n        scope: keys.YOUTUBE_SCOPE,\n        startDate: yearAgo,\n        metrics: 'estimatedMinutesWatched,views,likes,subscribersGained',\n        dimensions: 'hour',\n        sort: 'day'\n      })\n      .then(response => {\n        // Handle success.\n        console.log('Well done!');\n        console.log(response);\n      })\n      .catch(error => {\n        // Handle error.\n        console.log('An error occurred:', error);\n      });\n\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  render() {\n\n    if (this.props.user === undefined) {\n      Content = \"\";\n    } else {\n      Content =\n        <div className=\"Data\">\n          <input\n            name=\"channelName\"\n            type=\"text\"\n            placeholder=\"YouTube Channel Name\"\n            value={this.state.channelName}\n            onChange={this.handleChange}\n          />\n          <button onClick={this.Login}>Login</button><button onClick={this.FetchData}>Fetch Data</button>\n        </div>\n    }\n\n    return(\n      Content\n    );\n  }\n}\n\nexport default YouTubeData;\n"]},"metadata":{},"sourceType":"module"}