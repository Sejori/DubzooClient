{"ast":null,"code":"import _classCallCheck from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sebringrose/Projects/Dubzoo/app/client/src/components/Social.js\";\nimport React, { Component } from 'react';\nimport keys from '../config/keys';\nimport YouTubeAuth from './auth/YouTubeAuth';\nimport YouTubeData from './data/YouTubeData';\nvar Auth;\nvar Data;\n\nvar Social =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Social, _Component);\n\n  function Social(props) {\n    var _this;\n\n    _classCallCheck(this, Social);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Social).call(this, props));\n\n    _this.componentDidUpdate = function (prevProps) {\n      // Typical usage (don't forget to compare props):\n      if (_this.props.user.jwt !== prevProps.user.jwt) {\n        _this.setState({\n          loggedIn: !_this.state.loggedIn\n        });\n      }\n    };\n\n    _this.CheckCredentials = function () {\n      // Retrieve credentials from database\n      fetch(keys.STRAPI_URI + '/users/me', {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + _this.props.user.jwt\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        return _this.IsTokenValid(response);\n      });\n    };\n\n    _this.IsTokenValid = function (response) {\n      if (response.youtubeaccounts[0] === undefined) {\n        _this.setState({\n          authorised: false\n        });\n      } else {\n        if (response.youtubeaccounts[0].tokenObj.access_token !== undefined) {\n          _this.setState({\n            authorised: true\n          });\n        }\n\n        if (response.youtubeaccounts[0].tokenObj.expires_at < new Date().getTime()) {\n          _this.setState({\n            authorised: false\n          });\n\n          alert(\"Uh-oh. Your access has expired, please sign-in again :)\");\n        }\n      }\n    };\n\n    _this.state = {\n      loggedIn: false\n    };\n    return _this;\n  }\n\n  _createClass(Social, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.loggedIn === false) {\n        Auth = \"^ Please login above ^\";\n        Data = \"\";\n      } else {\n        {\n          this.CheckIfValidSocialCredentialsExist();\n        }\n\n        if (this.props.target === \"YouTube\") {\n          Auth = React.createElement(YouTubeAuth, {\n            user: this.props.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          });\n          Data = React.createElement(YouTubeData, {\n            user: this.props.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          });\n        } else {\n          Auth = \"DEV ISSUE: Please supply a configured target\";\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"Social\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.props.target), Data, Auth);\n    }\n  }]);\n\n  return Social;\n}(Component);\n\nexport default Social;","map":{"version":3,"sources":["/Users/sebringrose/Projects/Dubzoo/app/client/src/components/Social.js"],"names":["React","Component","keys","YouTubeAuth","YouTubeData","Auth","Data","Social","props","componentDidUpdate","prevProps","user","jwt","setState","loggedIn","state","CheckCredentials","fetch","STRAPI_URI","method","headers","then","response","json","IsTokenValid","youtubeaccounts","undefined","authorised","tokenObj","access_token","expires_at","Date","getTime","alert","CheckIfValidSocialCredentialsExist","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport keys from '../config/keys';\n\nimport YouTubeAuth from './auth/YouTubeAuth';\nimport YouTubeData from './data/YouTubeData';\n\nvar Auth;\nvar Data;\n\nclass Social extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loggedIn: false,\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    // Typical usage (don't forget to compare props):\n    if (this.props.user.jwt !== prevProps.user.jwt) {\n     this.setState({ loggedIn: !this.state.loggedIn });\n    }\n  }\n\n  CheckCredentials = () => {\n\n    // Retrieve credentials from database\n    fetch(keys.STRAPI_URI + '/users/me', {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + this.props.user.jwt\n      },\n    })\n    .then(response => response.json())\n    .then(response => this.IsTokenValid(response))\n  }\n\n  IsTokenValid = (response) => {\n    if (response.youtubeaccounts[0] === undefined) {\n      this.setState({ authorised: false })\n    } else {\n      if (response.youtubeaccounts[0].tokenObj.access_token !== undefined) {\n        this.setState({ authorised: true })\n      }\n      if (response.youtubeaccounts[0].tokenObj.expires_at < new Date().getTime()) {\n        this.setState({ authorised: false })\n        alert(\"Uh-oh. Your access has expired, please sign-in again :)\")\n      }\n    }\n  }\n\n  render() {\n\n    if (this.state.loggedIn === false) {\n      Auth = \"^ Please login above ^\";\n      Data = \"\";\n    } else {\n      {this.CheckIfValidSocialCredentialsExist();}\n      if (this.props.target === \"YouTube\") {\n        Auth = <YouTubeAuth user={this.props.user}/>;\n        Data = <YouTubeData user={this.props.user}/>;\n      } else {\n        Auth = \"DEV ISSUE: Please supply a configured target\";\n      }\n    }\n\n    return(\n      <div className=\"Social\">\n        <h2>{this.props.target}</h2>\n        {Data}\n        {Auth}\n      </div>\n    );\n\n  }\n}\n\nexport default Social;\n"]},"metadata":{},"sourceType":"module"}