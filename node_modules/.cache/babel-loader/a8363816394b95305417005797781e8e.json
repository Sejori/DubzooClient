{"ast":null,"code":"import _classCallCheck from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sebringrose/Projects/Dubzoo/app/client/src/components/auth/YouTubeAuth.js\";\nimport React, { Component } from 'react';\n\nvar keys = require('../../config/keys');\n\nvar YouTubeAuth =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(YouTubeAuth, _Component);\n\n  function YouTubeAuth() {\n    var _this;\n\n    _classCallCheck(this, YouTubeAuth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(YouTubeAuth).call(this));\n    _this.state = {\n      credentials: null\n    };\n    return _this;\n  }\n\n  _createClass(YouTubeAuth, [{\n    key: \"authenticate\",\n    value: function authenticate() {\n      console.log(\"authenticate\"); // Can also just pass the raw `data` object in place of an argument.\n\n      var token = youtubeAuth.createToken('access token', 'optional refresh token', 'optional token type', {\n        data: 'raw user data'\n      });\n      console.log(token); // Set the token TTL.\n\n      token.expiresIn(3600); // Seconds.\n\n      token.expiresIn(new Date('2016-11-08')); // Date.\n      // Refresh the users credentials and save the new access token and info.\n      //token.refresh().then(storeNewToken)\n      // Sign a standard HTTP request object, updating the URL with the access token\n      // or adding authorization headers, depending on token type.\n\n      token.sign({\n        method: 'get',\n        url: 'https://api.github.com/users'\n      }); //=> { method, url, headers, ... }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.authenticate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"LOGIN\"));\n    }\n  }]);\n\n  return YouTubeAuth;\n}(Component);\n\nexport default YouTubeAuth;","map":{"version":3,"sources":["/Users/sebringrose/Projects/Dubzoo/app/client/src/components/auth/YouTubeAuth.js"],"names":["React","Component","keys","require","YouTubeAuth","state","credentials","console","log","token","youtubeAuth","createToken","data","expiresIn","Date","sign","method","url","authenticate"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAAC,mBAAD,CAApB;;IAEMC,W;;;;;AACJ,yBAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAHY;AAMb;;;;mCAEc;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADa,CAEb;;AACA,UAAIC,KAAK,GAAGC,WAAW,CAACC,WAAZ,CAAwB,cAAxB,EAAwC,wBAAxC,EAAkE,qBAAlE,EAAyF;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAzF,CAAZ;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ,EAJa,CAMb;;AACAA,MAAAA,KAAK,CAACI,SAAN,CAAgB,IAAhB,EAPa,CAOS;;AACtBJ,MAAAA,KAAK,CAACI,SAAN,CAAgB,IAAIC,IAAJ,CAAS,YAAT,CAAhB,EARa,CAQ2B;AAExC;AACA;AAEA;AACA;;AACAL,MAAAA,KAAK,CAACM,IAAN,CAAW;AACTC,QAAAA,MAAM,EAAE,KADC;AAETC,QAAAA,GAAG,EAAE;AAFI,OAAX,EAfa,CAkBV;AACJ;;;6BAEQ;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AAKD;;;;EApCqBjB,S;;AAuC1B,eAAeG,WAAf","sourcesContent":["import React, { Component } from 'react';\n\nconst keys = require('../../config/keys')\n\nclass YouTubeAuth extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      credentials: null,\n    }\n  }\n\n  authenticate() {\n    console.log(\"authenticate\")\n    // Can also just pass the raw `data` object in place of an argument.\n    var token = youtubeAuth.createToken('access token', 'optional refresh token', 'optional token type', { data: 'raw user data' })\n    console.log(token);\n\n    // Set the token TTL.\n    token.expiresIn(3600) // Seconds.\n    token.expiresIn(new Date('2016-11-08')) // Date.\n\n    // Refresh the users credentials and save the new access token and info.\n    //token.refresh().then(storeNewToken)\n\n    // Sign a standard HTTP request object, updating the URL with the access token\n    // or adding authorization headers, depending on token type.\n    token.sign({\n      method: 'get',\n      url: 'https://api.github.com/users'\n    }) //=> { method, url, headers, ... }\n  }\n\n  render() {\n      return (\n        <div>\n          <button onClick={this.authenticate}>LOGIN</button>\n        </div>\n      );\n    }\n  }\n\nexport default YouTubeAuth;\n"]},"metadata":{},"sourceType":"module"}