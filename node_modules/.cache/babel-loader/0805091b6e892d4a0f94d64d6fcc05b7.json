{"ast":null,"code":"import _defineProperty from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sebringrose/Projects/Dubzoo/app/client/src/components/auth/YouTubeAuth.js\";\nimport React, { Component } from 'react';\nimport { GoogleLogin } from 'react-google-login';\n\nvar keys = require('../../config/keys');\n\nvar YouTubeAuth =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(YouTubeAuth, _Component);\n\n  function YouTubeAuth(props) {\n    var _this;\n\n    _classCallCheck(this, YouTubeAuth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(YouTubeAuth).call(this, props));\n\n    _this.logout = function () {\n      _this.setState({\n        socialUserID: ''\n      });\n    };\n\n    _this.onFailure = function (error) {\n      console.log(error);\n    };\n\n    _this.googleResponse = function (response) {\n      var _body;\n\n      var channelName = response.profileObj.name;\n      var profileObj = response.profileObj;\n      var tokenObj = response.tokenObj;\n      var user = _this.props.user.userID;\n      var body = (_body = {\n        \"channelName\": JSON.stringify(channelName),\n        \"profileObj\": JSON.stringify(profileObj),\n        \"tokenObj\": JSON.stringify(channelName)\n      }, _defineProperty(_body, \"channelName\", JSON.stringify(channelName)), _defineProperty(_body, \"profileObj\", profileObj), _defineProperty(_body, \"tokenObj\", tokenObj), _defineProperty(_body, \"user\", user), _body); // Store retrieved credentials in database\n\n      fetch(keys.STRAPI_URI + '/youtubeaccounts', {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": \"Bearer \" + _this.props.user.jwt\n        },\n        body: JSON.stringify(body)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        return console.log(response);\n      }); // Get refresh token\n    };\n\n    return _this;\n  }\n\n  _createClass(YouTubeAuth, [{\n    key: \"render\",\n    value: function render() {\n      switch (this.props.youTubeAuthorised) {\n        case false:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, React.createElement(GoogleLogin, {\n            clientId: keys.GOOGLE_CLIENT_ID,\n            scope: keys.YOUTUBE_AUTH_SCOPE,\n            buttonText: \"Login\",\n            responseType: \"id_token\",\n            prompt: \"consent\",\n            accessType: \"offline\",\n            onSuccess: this.googleResponse,\n            onFailure: this.onFailure,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }));\n\n        default:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            onClick: this.logout,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, \"Logout\"));\n      }\n    }\n  }]);\n\n  return YouTubeAuth;\n}(Component);\n\nexport default YouTubeAuth;","map":{"version":3,"sources":["/Users/sebringrose/Projects/Dubzoo/app/client/src/components/auth/YouTubeAuth.js"],"names":["React","Component","GoogleLogin","keys","require","YouTubeAuth","props","logout","setState","socialUserID","onFailure","error","console","log","googleResponse","response","channelName","profileObj","name","tokenObj","user","userID","body","JSON","stringify","fetch","STRAPI_URI","method","headers","jwt","then","json","youTubeAuthorised","GOOGLE_CLIENT_ID","YOUTUBE_AUTH_SCOPE"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAAC,mBAAD,CAApB;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;;AADe,UAInBC,MAJmB,GAIV,YAAM;AACX,YAAKC,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACH,KANkB;;AAAA,UAQnBC,SARmB,GAQP,UAACC,KAAD,EAAW;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAVkB;;AAAA,UAYnBG,cAZmB,GAYF,UAACC,QAAD,EAAc;AAAA;;AAE7B,UAAIC,WAAW,GAAGD,QAAQ,CAACE,UAAT,CAAoBC,IAAtC;AACA,UAAID,UAAU,GAAGF,QAAQ,CAACE,UAA1B;AACA,UAAIE,QAAQ,GAAGJ,QAAQ,CAACI,QAAxB;AACA,UAAIC,IAAI,GAAG,MAAKd,KAAL,CAAWc,IAAX,CAAgBC,MAA3B;AAEA,UAAIC,IAAI;AACN,uBAAeC,IAAI,CAACC,SAAL,CAAeR,WAAf,CADT;AAEN,sBAAcO,IAAI,CAACC,SAAL,CAAeP,UAAf,CAFR;AAGN,oBAAYM,IAAI,CAACC,SAAL,CAAeR,WAAf;AAHN,+CAISO,IAAI,CAACC,SAAL,CAAeR,WAAf,CAJT,wCAKNC,UALM,sCAMNE,QANM,kCAONC,IAPM,SAAR,CAP6B,CAiB7B;;AACAK,MAAAA,KAAK,CAACtB,IAAI,CAACuB,UAAL,GAAkB,kBAAnB,EAAuC;AAC1CC,QAAAA,MAAM,EAAE,MADkC;AAE1CC,QAAAA,OAAO,EAAE;AACP,2BAAiB,YAAY,MAAKtB,KAAL,CAAWc,IAAX,CAAgBS;AADtC,SAFiC;AAK1CP,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf;AALoC,OAAvC,CAAL,CAOCQ,IAPD,CAOM,UAAAf,QAAQ;AAAA,eAAIA,QAAQ,CAACgB,IAAT,EAAJ;AAAA,OAPd,EAQCD,IARD,CAQM,UAAAf,QAAQ;AAAA,eAAIH,OAAO,CAACC,GAAR,CAAYE,QAAZ,CAAJ;AAAA,OARd,EAlB6B,CA4B7B;AAED,KA1CkB;;AAAA;AAElB;;;;6BA0CQ;AACP,cAAQ,KAAKT,KAAL,CAAW0B,iBAAnB;AACE,aAAK,KAAL;AACE,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,WAAD;AACI,YAAA,QAAQ,EAAE7B,IAAI,CAAC8B,gBADnB;AAEI,YAAA,KAAK,EAAE9B,IAAI,CAAC+B,kBAFhB;AAGI,YAAA,UAAU,EAAC,OAHf;AAII,YAAA,YAAY,EAAC,UAJjB;AAKI,YAAA,MAAM,EAAC,SALX;AAMI,YAAA,UAAU,EAAC,SANf;AAOI,YAAA,SAAS,EAAE,KAAKpB,cAPpB;AAQI,YAAA,SAAS,EAAE,KAAKJ,SARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADF;;AAeF;AACE,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAQ,YAAA,OAAO,EAAE,KAAKH,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,CADF;AAlBJ;AAwBD;;;;EAtEuBN,S;;AAyE1B,eAAeI,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport { GoogleLogin } from 'react-google-login';\n\nconst keys = require('../../config/keys');\n\nclass YouTubeAuth extends Component {\n  constructor(props) {\n      super(props);\n  }\n\n  logout = () => {\n      this.setState({ socialUserID: '' })\n  };\n\n  onFailure = (error) => {\n    console.log(error);\n  };\n\n  googleResponse = (response) => {\n\n    let channelName = response.profileObj.name;\n    let profileObj = response.profileObj;\n    let tokenObj = response.tokenObj;\n    let user = this.props.user.userID;\n\n    let body = {\n      \"channelName\": JSON.stringify(channelName),\n      \"profileObj\": JSON.stringify(profileObj),\n      \"tokenObj\": JSON.stringify(channelName),\n      \"channelName\": JSON.stringify(channelName),\n      profileObj,\n      tokenObj,\n      user\n    }\n\n    // Store retrieved credentials in database\n    fetch(keys.STRAPI_URI + '/youtubeaccounts', {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": \"Bearer \" + this.props.user.jwt\n      },\n      body: JSON.stringify(body)\n    })\n    .then(response => response.json())\n    .then(response => console.log(response))\n\n    // Get refresh token\n\n  }\n\n  render() {\n    switch (this.props.youTubeAuthorised) {\n      case false:\n        return(\n          <div>\n              <GoogleLogin\n                  clientId={keys.GOOGLE_CLIENT_ID}\n                  scope={keys.YOUTUBE_AUTH_SCOPE}\n                  buttonText=\"Login\"\n                  responseType=\"id_token\"\n                  prompt=\"consent\"\n                  accessType=\"offline\"\n                  onSuccess={this.googleResponse}\n                  onFailure={this.onFailure}\n              />\n          </div>\n        )\n\n      default:\n        return(\n          <div>\n          <button onClick={this.logout}>Logout</button>\n          </div>\n        )\n    }\n  }\n}\n\nexport default YouTubeAuth;\n"]},"metadata":{},"sourceType":"module"}