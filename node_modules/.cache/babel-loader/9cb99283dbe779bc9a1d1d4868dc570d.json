{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sebringrose/Projects/Dubzoo/app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sebringrose/Projects/Dubzoo/app/client/src/components/data/YouTubeData.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nvar keys = require('../../config/keys');\n\nvar Content;\n\nvar YouTubeData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(YouTubeData, _Component);\n\n  function YouTubeData(props) {\n    var _this;\n\n    _classCallCheck(this, YouTubeData);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(YouTubeData).call(this, props));\n\n    _this.componentDidUpdate = function (prevProps) {\n      // Typical usage (don't forget to compare props):\n      if (_this.props.socialUser !== prevProps.socialUser) {\n        _this.setState({\n          socialUser: _this.props.socialUser\n        });\n      }\n    };\n\n    _this.FetchData =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var today, dd, mm, yyyy, monthAgo;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // PUT DB QUERY TO GET SOCIAL ACCOUNT DETAILS HERE\n              alert(\"you got here\"); // getting current date\n\n              today = new Date();\n              dd = today.getDate();\n              mm = today.getMonth() + 1;\n              yyyy = today.getFullYear();\n              today = mm + '-' + dd + '-' + yyyy;\n              mm = mm - 1;\n              monthAgo = mm + '-' + dd + '-' + yyyy; // GET YT Analytics API\n\n              axios.get(keys.YOUTUBE_ANALYTICS_URI, {\n                access_token: _this.props.user.accessToken,\n                endDate: today,\n                ids: _this.state.channelName,\n                scope: keys.YOUTUBE_SCOPES,\n                startDate: monthAgo,\n                metrics: 'estimatedMinutesWatched,views,likes,subscribersGained',\n                dimensions: 'hour',\n                sort: 'day'\n              }).then(function (response) {\n                // Handle success.\n                console.log('Well done!');\n                console.log(response);\n              }).catch(function (error) {\n                // Handle error.\n                console.log('An error occurred:', error);\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.state = {\n      channelName: \"\" // PUT DB QUERY TO GET SOCIAL ACCOUNT DETAILS HERE\n\n    };\n    return _this;\n  }\n\n  _createClass(YouTubeData, [{\n    key: \"render\",\n    value: function render() {\n      // change this to use db data to check if can fetchData\n      if (this.state.socialUser === undefined) {\n        Content = \"\";\n      } else {\n        Content = React.createElement(\"button\", {\n          onClick: this.FetchData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Fetch Data\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"Data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, Content);\n    }\n  }]);\n\n  return YouTubeData;\n}(Component);\n\nexport default YouTubeData;","map":{"version":3,"sources":["/Users/sebringrose/Projects/Dubzoo/app/client/src/components/data/YouTubeData.js"],"names":["React","Component","axios","keys","require","Content","YouTubeData","props","componentDidUpdate","prevProps","socialUser","setState","FetchData","alert","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","monthAgo","get","YOUTUBE_ANALYTICS_URI","access_token","user","accessToken","endDate","ids","state","channelName","scope","YOUTUBE_SCOPES","startDate","metrics","dimensions","sort","then","response","console","log","catch","error","undefined"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAAC,mBAAD,CAApB;;AACA,IAAIC,OAAJ;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;;AADiB,UAWnBC,kBAXmB,GAWE,UAACC,SAAD,EAAe;AAClC;AACA,UAAI,MAAKF,KAAL,CAAWG,UAAX,KAA0BD,SAAS,CAACC,UAAxC,EAAoD;AACnD,cAAKC,QAAL,CAAc;AAAED,UAAAA,UAAU,EAAE,MAAKH,KAAL,CAAWG;AAAzB,SAAd;AACA;AACF,KAhBkB;;AAAA,UAkBnBE,SAlBmB;AAAA;AAAA;AAAA;AAAA,6BAkBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEV;AACAC,cAAAA,KAAK,CAAC,cAAD,CAAL,CAHU,CAKV;;AACIC,cAAAA,KANM,GAME,IAAIC,IAAJ,EANF;AAONC,cAAAA,EAPM,GAODF,KAAK,CAACG,OAAN,EAPC;AAQNC,cAAAA,EARM,GAQDJ,KAAK,CAACK,QAAN,KAAiB,CARhB;AASNC,cAAAA,IATM,GASCN,KAAK,CAACO,WAAN,EATD;AAUVP,cAAAA,KAAK,GAAGI,EAAE,GAAC,GAAH,GAAOF,EAAP,GAAU,GAAV,GAAcI,IAAtB;AAEAF,cAAAA,EAAE,GAAGA,EAAE,GAAG,CAAV;AACII,cAAAA,QAbM,GAaKJ,EAAE,GAAC,GAAH,GAAOF,EAAP,GAAU,GAAV,GAAcI,IAbnB,EAeV;;AACAlB,cAAAA,KAAK,CACFqB,GADH,CACOpB,IAAI,CAACqB,qBADZ,EACmC;AAC/BC,gBAAAA,YAAY,EAAE,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBC,WADC;AAE/BC,gBAAAA,OAAO,EAAEd,KAFsB;AAG/Be,gBAAAA,GAAG,EAAE,MAAKC,KAAL,CAAWC,WAHe;AAI/BC,gBAAAA,KAAK,EAAE7B,IAAI,CAAC8B,cAJmB;AAK/BC,gBAAAA,SAAS,EAAEZ,QALoB;AAM/Ba,gBAAAA,OAAO,EAAE,uDANsB;AAO/BC,gBAAAA,UAAU,EAAE,MAPmB;AAQ/BC,gBAAAA,IAAI,EAAE;AARyB,eADnC,EAWGC,IAXH,CAWQ,UAAAC,QAAQ,EAAI;AAChB;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,gBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,eAfH,EAgBGG,KAhBH,CAgBS,UAAAC,KAAK,EAAI;AACd;AACAH,gBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCE,KAAlC;AACD,eAnBH;;AAhBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAlBO;AAGjB,UAAKb,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF,CAKb;;AALa,KAAb;AAHiB;AASlB;;;;6BAgDQ;AAEP;AACA,UAAI,KAAKD,KAAL,CAAWpB,UAAX,KAA0BkC,SAA9B,EAAyC;AACvCvC,QAAAA,OAAO,GAAG,EAAV;AACD,OAFD,MAEO;AACLA,QAAAA,OAAO,GAAG;AAAQ,UAAA,OAAO,EAAE,KAAKO,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAV;AACD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGP,OADH,CADF;AAKD;;;;EAxEuBJ,S;;AA2E1B,eAAeK,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst keys = require('../../config/keys');\nvar Content;\n\nclass YouTubeData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      channelName: \"\",\n\n    }\n\n    // PUT DB QUERY TO GET SOCIAL ACCOUNT DETAILS HERE\n  }\n\n  componentDidUpdate = (prevProps) => {\n    // Typical usage (don't forget to compare props):\n    if (this.props.socialUser !== prevProps.socialUser) {\n     this.setState({ socialUser: this.props.socialUser });\n    }\n  }\n\n  FetchData = async() => {\n\n    // PUT DB QUERY TO GET SOCIAL ACCOUNT DETAILS HERE\n    alert(\"you got here\");\n\n    // getting current date\n    var today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth()+1;\n    let yyyy = today.getFullYear();\n    today = mm+'-'+dd+'-'+yyyy;\n\n    mm = mm - 1;\n    var monthAgo = mm+'-'+dd+'-'+yyyy;\n\n    // GET YT Analytics API\n    axios\n      .get(keys.YOUTUBE_ANALYTICS_URI, {\n        access_token: this.props.user.accessToken,\n        endDate: today,\n        ids: this.state.channelName,\n        scope: keys.YOUTUBE_SCOPES,\n        startDate: monthAgo,\n        metrics: 'estimatedMinutesWatched,views,likes,subscribersGained',\n        dimensions: 'hour',\n        sort: 'day'\n      })\n      .then(response => {\n        // Handle success.\n        console.log('Well done!');\n        console.log(response);\n      })\n      .catch(error => {\n        // Handle error.\n        console.log('An error occurred:', error);\n      });\n\n  }\n\n  render() {\n\n    // change this to use db data to check if can fetchData\n    if (this.state.socialUser === undefined) {\n      Content = \"\";\n    } else {\n      Content = <button onClick={this.FetchData}>Fetch Data</button>\n    }\n\n    return(\n      <div className=\"Data\">\n        {Content}\n      </div>\n    );\n  }\n}\n\nexport default YouTubeData;\n"]},"metadata":{},"sourceType":"module"}